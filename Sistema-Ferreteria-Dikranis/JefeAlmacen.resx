<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>